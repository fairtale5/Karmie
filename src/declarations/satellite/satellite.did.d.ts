// This file was automatically generated by the Juno CLI.
// Any modifications may be overwritten.

import type { Principal } from '@dfinity/principal';
import type { ActorMethod } from '@dfinity/agent';
import type { IDL } from '@dfinity/candid';

export interface GraphData {
  'edges' : Array<GraphEdge>,
  'nodes' : Array<GraphNode>,
}
export interface GraphEdge {
  'weight' : number,
  'source_count' : number,
  'source' : string,
  'is_bidirectional' : boolean,
  'target' : string,
  'vote_value' : number,
  'target_count' : [] | [number],
  'tag_ulid' : [] | [string],
}
export interface GraphNode {
  'avatar_url' : [] | [string],
  'ulid' : string,
  'reputation' : [] | [number],
  'label' : string,
}
export interface ReputationData {
  'last_calculation' : bigint,
  'reputation_basis' : number,
  'reputation_rewards' : number,
  'vote_weight' : number,
  'has_voting_power' : boolean,
  'tag_ulid' : string,
  'reputation_total_effective' : number,
  'owner_ulid' : string,
}
export type Result = { 'Ok' : boolean } |
  { 'Err' : string };
export type Result_1 = { 'Ok' : string } |
  { 'Err' : string };
export type Result_2 = { 'Ok' : GraphData } |
  { 'Err' : string };
export type Result_3 = { 'Ok' : number } |
  { 'Err' : string };
export type Result_4 = { 'Ok' : ReputationData } |
  { 'Err' : string };
export interface _SERVICE {
  'build_version' : ActorMethod<[], string>,
  'check_username_availability_scan' : ActorMethod<[string], Result>,
  'create_document_key_for_reputation' : ActorMethod<
    [string, string],
    Result_1
  >,
  'create_document_key_for_tag' : ActorMethod<[string, string], Result_1>,
  'create_document_key_for_user' : ActorMethod<[string, string], Result_1>,
  'create_document_key_for_vote' : ActorMethod<
    [string, string, string],
    Result_1
  >,
  'get_graph_data' : ActorMethod<[string, string], Result_2>,
  'get_user_reputation' : ActorMethod<[string, string], Result_3>,
  'get_user_reputation_full' : ActorMethod<[string, string], Result_4>,
  'recalculate_reputation' : ActorMethod<[string, string], Result_3>,
  'validate_document_key' : ActorMethod<[string, string], Result>,
}
export declare const idlFactory: IDL.InterfaceFactory;
export declare const init: (args: { IDL: typeof IDL }) => IDL.Type[];
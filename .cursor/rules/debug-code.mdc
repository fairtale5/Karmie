---
description: debug-code: When compiler errors appear or runtime bugs occur
globs: 
alwaysApply: false
---
# debug-code

**IMPORTANT: Apply this rule for all compiler errors and runtime bugs**

When you see me mention "compiler errors", "build errors", "runtime bugs", or share error output, IMMEDIATELY follow these steps IN ORDER:

## Rule Steps (DO NOT SKIP ANY)

1. üîç **Report Changes & Results (MANDATORY FIRST STEP)**
   - **Directly compare the current error output to the previous build by stating if we made progress, regressed, or stayed the same.**
   - List: resolved errors, new errors, unchanged errors.
   - **This step is always first and must be explicit.**

2. üìä **Prioritize & Analyze Errors (MANDATORY CONTEXT)**
   - Sort by dependency chain (fix providers before consumers)
   - Prioritize build-breaking errors
   - For the TOP error only, provide:
     - **File path and line number**
     - **The code that is referencing the missing item (e.g., the import or function call)**
     - **Explain what is asking for it and why**
     - Error message
     - Context explanation (e.g., "This is part of function X that stores Y and needs Z")
   - **Do NOT discuss or suggest fixes for other errors in this step.**

3. üõ†Ô∏è **Fix Top Issue Only (MANDATORY SINGLE SUGGESTION)**
   - Research documentation first
   - Respect code standards and logging solutions
   - Present side-by-side comparison:
     ```
     BEFORE:
     [code with issue]
     
     AFTER:
     [fixed code]
     ```
   - Explain:
     - What data we're handling
     - Where that data comes from
     - Why this fix resolves the issue
   - Update any relevant comments or documentation
   - **Do NOT suggest or discuss fixes for any other errors in this response.**
## Acknowledgment
Start your response with: "**Applying debug-code rule**" to confirm you're following this process.

---
description: git commit process
globs: 
alwaysApply: false
---
git commits should always:
- check if all files are staged, and either stage them or warn if not all files are staged for commit.
- check what files, and which code changed since the last commit, by checking the lines of code changed.
- write a logn commit message into commit_message.txt
- use that file to commit the latest changes
- delete the file afterwards
- push the changes to github

Example of what a good commit looks like:

type(scope): concise summary of changes

Overview:
A clear, high-level description of what this commit accomplishes and why it's important.

Changes:
- Bullet point list of specific changes, grouped by feature/component
- Each bullet point starts with a verb in present tense
- Include specific values, thresholds, or important details
- Group related changes together

Files changed:
- path/to/file1
  - Specific changes made to this file
  - Implementation details or important notes
- path/to/file2
  - Changes and their impact
  - Any relevant implementation details

[Optional] Additional context or notes about the changes, especially if they affect other parts of the system or have important implications.